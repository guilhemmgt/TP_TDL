;int a = 0;
PUSH 1
LOADL 0
STORE (1) 0[SB]
;int b = 4;
PUSH 1
LOADL 4
STORE (1) 1[SB]
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@7946e1f4
;(b == (- 1))
;if else
LOAD (1) 1[SB]
;(- 1)
LOADL 1
SUBR INeg
SUBR IEq
JUMPIF (0) else12
; a  = 1;
LOADL 1
LOADA 0[SB]
STOREI (1)
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@3c09711b
;(b == (- 1))
;if
LOAD (1) 1[SB]
;(- 1)
LOADL 1
SUBR INeg
SUBR IEq
JUMPIF (0) endif13
; a  = 2;
LOADL 2
LOADA 0[SB]
STOREI (1)
POP (0) 0
endif13
POP (0) 0
JUMP endif12
else12
; a  = 4;
LOADL 4
LOADA 0[SB]
STOREI (1)
;if
LOADL 0
JUMPIF (0) endif14
;if
LOADL 1
JUMPIF (0) endif15
POP (0) 0
endif15
POP (0) 0
endif14
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@5cc7c2a6
;(a == 4)
;if else
LOAD (1) 0[SB]
LOADL 4
SUBR IEq
JUMPIF (0) else16
; a  = 3;
LOADL 3
LOADA 0[SB]
STOREI (1)
POP (0) 0
JUMP endif16
else16
POP (0) 0
endif16
POP (0) 0
endif12
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@b97c004
;(a == 3)
;((a == 3) && (b == 4))
;print ((a == 3) && (b == 4));
LOAD (1) 0[SB]
LOADL 3
SUBR IEq
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@4590c9c3
;(b == 4)
LOAD (1) 1[SB]
LOADL 4
SUBR IEq
SUBR BAnd
SUBR IOut
POP (0) 2
HALT

